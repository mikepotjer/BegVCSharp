<Window x:Class="KarliCards_Gui.GameClient"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KarliCards_Gui"
        mc:Ignorable="d"
        Title="Karli Cards Game Client" WindowState="Maximized">
    <!-- Instantiate a DataContext to ensure there is one available for the window, though we 
    expect the StartGame command to replace it with a new instance. -->
    <Window.DataContext>
        <local:GameViewModel/>
    </Window.DataContext>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close" CanExecute="CommandCanExecute" Executed="CommandExecuted"/>
        <CommandBinding Command="ApplicationCommands.Save" CanExecute="CommandCanExecute" Executed="CommandExecuted"/>
        <CommandBinding Command="local:GameViewModel.StartGameCommand" CanExecute="CommandCanExecute" Executed="CommandExecuted"/>
        <CommandBinding Command="local:GameViewModel.ShowAboutCommand" CanExecute="CommandCanExecute" Executed="CommandExecuted"/>
        <CommandBinding Command="local:GameOptions.OptionsCommand" CanExecute="CommandCanExecute" Executed="CommandExecuted"/>
    </Window.CommandBindings>
    <Grid Background="Green">
        <Grid.RowDefinitions>
            <RowDefinition Height="58"/>
            <RowDefinition Height="20"/>
            <RowDefinition />
            <RowDefinition Height="42"/>
        </Grid.RowDefinitions>
        <Canvas Grid.Row="0" Background="#C40D42">
            <Image Height="56" Canvas.Left="0" Canvas.Top="0" Stretch="UniformToFill" Source=".\Images\Banner.png"/>
            <Label Content="Karli Cards" Canvas.Right="10" Canvas.Top="13" Foreground="#FFF7EFEF" FontFamily="Times New Roman"
                    FontSize="24" FontWeight="Bold"/>
        </Canvas>
        <DockPanel Grid.Row="1" Margin="0">
            <Menu Background="Black" FontWeight="Bold" Foreground="White">
                <MenuItem Header="_File" Foreground="White">
                    <!-- Link the New Game item to one of the custom command bindings defined above. -->
                    <MenuItem Header="_New Game..." Height="22" Width="200" Foreground="Black"
                              Command="local:GameViewModel.StartGameCommand"/>
                    <MenuItem Header="_Open" Width="200" Foreground="Black"/>
                    <MenuItem Header="_Save" Width="200" Foreground="Black" Command="Save">
                        <MenuItem.Icon>
                            <Image Source="Images\base_floppydisk_32.png" Width="20"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Width="145" Foreground="Black"/>
                    <MenuItem Header="_Close" Width="200" Foreground="Black" Command="Close"/>
                </MenuItem>
                <MenuItem Header="_Game" Background="Black" Foreground="White">
                    <MenuItem Header="_Undo" HorizontalAlignment="Left" Width="145" Foreground="Black"/>
                </MenuItem>
                <MenuItem Header="_Tools" Background="Black" Foreground="White">
                    <MenuItem Header="_Options" HorizontalAlignment="Left" Width="200" Foreground="Black"
                              Command="local:GameOptions.OptionsCommand"/>
                </MenuItem>
                <MenuItem Header="Help" Background="Black" Foreground="White">
                    <MenuItem Header="_About" HorizontalAlignment="Left" Width="145" Foreground="Black"
                              Command="local:GameViewModel.ShowAboutCommand"/>
                </MenuItem>
            </Menu>
        </DockPanel>
        <DockPanel Grid.Row="2">
            <!-- CardsInHandControl handles the presentation of each players hand. The control has 4 dependency
            properties that are bound here. The Game property is bound to the data context above, which is a 
            GameViewModel object. Note that since the GameViewModel is the DataContext for the control, we can
            bind directly to ComputerPlaysWithOpenHand. It does NOT work to bind to GameOptions.ComputerPlaysWithOpenHand
            as the book says. -->
            <local:CardsInHandControl x:Name="Player1Hand" DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Top"
                                      Height="154" Width="380" PlayerOrientation="Horizontal"
                                      Owner="{Binding Players[0]}" PlayerState="{Binding Players[0].State}" Game="{Binding}"
                                      ComputerPlaysWithOpenHand="{Binding ComputerPlaysWithOpenHand}"/>
            <local:CardsInHandControl x:Name="Player2Hand" DockPanel.Dock="Right" VerticalAlignment="Center" 
                                      Height="380" Width="180" PlayerOrientation="Vertical"
                                      Owner="{Binding Players[1]}" PlayerState="{Binding Players[1].State}" Game="{Binding}"
                                      ComputerPlaysWithOpenHand="{Binding ComputerPlaysWithOpenHand}"/>
            <local:CardsInHandControl x:Name="Player3Hand" DockPanel.Dock="Bottom" HorizontalAlignment="Center" VerticalAlignment="Top" 
                                      Height="154" Width="380" PlayerOrientation="Horizontal"
                                      Owner="{Binding Players[2]}" PlayerState="{Binding Players[2].State}" Game="{Binding}"
                                      ComputerPlaysWithOpenHand="{Binding ComputerPlaysWithOpenHand}"/>
            <local:CardsInHandControl x:Name="Player4Hand" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center"
                                      Height="380" Width="180" PlayerOrientation="Vertical"
                                      Owner="{Binding Players[3]}" PlayerState="{Binding Players[3].State}" Game="{Binding}"
                                      ComputerPlaysWithOpenHand="{Binding ComputerPlaysWithOpenHand}"/>
            <!-- GameDecksControl handles the presentation of the game deck and discard pile. It has 4 dependency properties
            that are bound here. -->
            <local:GameDecksControl x:Name="GameDecks" Height="180"
                                    Deck="{Binding GameDeck}"
                                    AvailableCard="{Binding CurrentAvailableCard}"
                                    CurrentPlayer="{Binding CurrentPlayer}"
                                    GameStarted="{Binding GameStarted}"/>
        </DockPanel>
        <StatusBar Grid.Row="3" HorizontalAlignment="Center" Margin="0,0,0,15" VerticalAlignment="Center"
                   Background="Green" Foreground="White" FontWeight="Bold">
            <StatusBarItem VerticalAlignment="Center">
                <TextBlock Text="{Binding CurrentStatusText}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
